# bash prompt colorizarion for python virtualenvs, git, and hg branches

# The various escape codes that we can use to color our prompt.
         RED="\[\e[0;31m\]"
        PINK="\[\e[1;35m\]"
      YELLOW="\[\e[1;33m\]"
       GREEN="\[\e[0;32m\]"
        BLUE="\[\e[1;34m\]"
   LIGHT_RED="\[\e[1;31m\]"
 LIGHT_GREEN="\[\e[1;32m\]"
       WHITE="\[\e[1;37m\]"
  LIGHT_GRAY="\[\e[0;37m\]"
  COLOR_NONE="\[\e[0m\]"
WINDOW_TITLE="\[\e]0;\u@\h: \w\a\]"

# Determine active Python virtualenv details.
function set_virtualenv () {
    if test -z "$VIRTUAL_ENV" ; then
        PYTHON_VIRTUALENV=""
    else
        PYTHON_VIRTUALENV="${RED}(`basename \"$VIRTUAL_ENV\"`)${COLOR_NONE} "
    fi
}

hg_branch() {
    hg branch 2> /dev/null | awk '{print "hg["$1"] "}'
}

git_branch() {
    # git branch 2> /dev/null | awk '{print $1}'
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/git[\1] /'
}

# Set the full bash prompt.
function set_bash_prompt () {
    # Set the PYTHON_VIRTUALENV variable.
    set_virtualenv

    PS1="${WINDOW_TITLE}${PYTHON_VIRTUALENV}${WHITE}\u${YELLOW}@${PINK}\h${COLOR_NONE}:${BLUE}\w${COLOR_NONE} ${GREEN}$(git_branch)$(hg_branch)${COLOR_NONE}$ "
}

# Tell bash to execute this function just before displaying its prompt.
PROMPT_COMMAND=set_bash_prompt
